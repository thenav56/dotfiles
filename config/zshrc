# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

zinit for \
    light-mode \
    zsh-users/zsh-autosuggestions \
        light-mode \
    zdharma-continuum/fast-syntax-highlighting \
    zdharma-continuum/history-search-multi-word

zinit light romkatv/powerlevel10k
zinit light jeffreytse/zsh-vi-mode

zi for \
    atload"zicompinit; zicdreplay" \
    blockf \
    lucid \
    wait \
  zsh-users/zsh-completions

### End of Zinit's installer chunk

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# History Configuration
HISTSIZE=10000000
SAVEHIST=10000000
HISTFILE="$HOME/.zsh_history"

setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.

# Environment variables
export PATH=$PATH:"$HOME/.local/bin/"
export EDITOR=nvim
export ZVM_VI_EDITOR=$EDITOR
export VISUAL=$EDITOR
export RIPGREP_CONFIG_PATH=$HOME/.ripgreprc
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1


export GPG_TTY=$(tty)
gpgconf --launch gpg-agent

# MANUAL using bat
export MANROFFOPT="-c"
export MANPAGER="sh -c 'col -bx | bat --theme base16 -l man -p'"

alias ls=eza
alias cat="bat --theme base16"
alias ll='eza -la --git'
alias gpush='git push -u origin $(git rev-parse --abbrev-ref HEAD)'


# The plugin will auto execute this zvm_after_init function
function zvm_after_init() {
    # Try to load FZF
    [ -s "$FZF_KEY_BINDINGS" ] && source "$FZF_KEY_BINDINGS"
    [ -s "$FZF_COMPLETION" ] && source "$FZF_COMPLETION"

    if type "atuin" > /dev/null; then
        eval "$(atuin init zsh --disable-up-arrow)";
    fi

    # this would bind ctrl + space to accept the current suggestion.
    bindkey '^ ' autosuggest-accept
}
if type "zoxide" > /dev/null; then eval "$(zoxide init zsh)"; fi
if type "pyenv" > /dev/null; then eval "$(pyenv init -)"; fi

# Theme
# NOTE: Change using export GTK_DAY_THEME="Awesome-theme" in ~/.zsh-additional-rc
export GTK_DAY_THEME="Arc"
export GTK_NIGHT_THEME="Arc-Dark"
export GH_DAY_THEME="github-light"
export GH_NIGHT_THEME="github-dark-dim"
export BASE16_DAY_THEME="base16_gruvbox-light-hard"
export BASE16_NIGHT_THEME="base16_gruvbox-dark-soft"
export VIM_BASE16_DAY_THEME="gruvbox-light-hard"
export VIM_BASE16_NIGHT_THEME="gruvbox-dark-soft"
export KITTY_DAY_FONT="CaskaydiaCove NF"
export KITTY_NIGHT_FONT="CaskaydiaCove NF Light"
# -- Functions
function day(){
    # NOTE: gtk not working
    export KITTY_CUSTOM_FONT=$KITTY_DAY_FONT
    export VIM_BASE16_THEME=$VIM_BASE16_DAY_THEME
    eval "$BASE16_DAY_THEME"
    eval "git config --file ~/.git-additional.config split-diffs.theme-name $GH_DAY_THEME"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        osascript -e \
            'tell app "System Events" to tell appearance preferences to set dark mode to false'
    else
        eval "gsettings set org.gnome.desktop.interface gtk-theme $GTK_DAY_THEME"
    fi
}

function night(){
    # NOTE: gtk not working
    export KITTY_CUSTOM_FONT=$KITTY_NIGHT_FONT
    export VIM_BASE16_THEME=$VIM_BASE16_NIGHT_THEME
    eval "$BASE16_NIGHT_THEME"
    eval "git config --file ~/.git-additional.config split-diffs.theme-name $GH_NIGHT_THEME"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        osascript -e \
            'tell app "System Events" to tell appearance preferences to set dark mode to true'
    else
        eval "gsettings set org.gnome.desktop.interface gtk-theme $GTK_NIGHT_THEME"
    fi
}

# -- Base16 Shell
export BASE16_SHELL_HOOKS="$HOME/.dotfiles/base16/shell-hooks/"
export BASE16_THEME_VALUE_FILE="$HOME/.bash16_theme_value"
export BASE16_THEME_VIM_FILE="$HOME/.bash16_theme_vim_value"
BASE16_SHELL="$HOME/.dotfiles/base16/shell/"
[ -n "$PS1" ] &&
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && source "$BASE16_SHELL/profile_helper.sh"

if [[ "$OSTYPE" == "darwin"* ]]; then
    # MacOS
    # -- FZF
    FZF_KEY_BINDINGS="$(brew --prefix)/opt/fzf/shell/key-bindings.zsh"
    FZF_COMPLETION="$(brew --prefix)/opt/fzf/shell/completion.zsh"
else
    # Linux
    # -- FZF
    FZF_KEY_BINDINGS="/usr/share/fzf/key-bindings.zsh"
    FZF_COMPLETION="/usr/share/fzf/completion.zsh"
fi

# Include sensitive/ovewrite configs/env
# export DAILY_JOURNAL_DIR="$HOME/<path>/journals"
# export DAILY_JOURNAL_REPO_DIR="$HOME/<path>/"
ADDITIONAL_ZSH_CONFIGS="$HOME/.zsh-additional-rc"
[ -f "$ADDITIONAL_ZSH_CONFIGS" ] && source "$ADDITIONAL_ZSH_CONFIGS"
